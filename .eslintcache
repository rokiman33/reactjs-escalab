[{"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\index.js":"1","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\App.js":"2","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\Routes.js":"3","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\auth\\auth.js":"4","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\templates\\Loading.js":"5","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\history.js":"6","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\login\\SignUpPage.js":"7","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\dashboard\\DashboardPage.js":"8","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\customer\\CustomerPage.js":"9","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\login\\LoginForm.js":"10","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\customerlog\\CustomerlogAddUpdatePage.js":"11","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\customerlog\\CustomerlogPage.js":"12","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\document\\DocumentPage.js":"13","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\customer\\CustomerAddUpdatePage.js":"14","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\users\\UsersPage.js":"15","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\document\\DocumentAddUpdatePage.js":"16","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\documentlog\\DocumentlogAddUpdatePage.js":"17","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\documentlog\\DocumentlogPage.js":"18","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\users\\UsersAddUpdatePage.js":"19","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\api\\axios.js":"20","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\templates\\Template.js":"21","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\dashboard\\DashboardCard.js":"22","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\customer\\CustomerTable.js":"23","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\customerlog\\CustomerlogTable.js":"24","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\document\\DocumentTable.js":"25","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\documentlog\\DocumentlogTable.js":"26","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\repo\\documentlogRepo.js":"27","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\repo\\customerlogRepo.js":"28","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\repo\\usersRepo.js":"29","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\repo\\documentRepo.js":"30","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\repo\\customerRepo.js":"31","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\templates\\MenuItems.js":"32","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\templates\\TableIcons.js":"33","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\document\\DocumentColumns.js":"34","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\documentlog\\DocumentlogColumns.js":"35","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\customerlog\\CustomerlogColumns.js":"36","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\customer\\CustomerColumns.js":"37","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\users\\UsersTable.js":"38","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\users\\UsersColumns.js":"39"},{"size":177,"mtime":1601731268083,"results":"40","hashOfConfig":"41"},{"size":947,"mtime":1629858974174,"results":"42","hashOfConfig":"41"},{"size":2560,"mtime":1629855672626,"results":"43","hashOfConfig":"41"},{"size":1865,"mtime":1629855672630,"results":"44","hashOfConfig":"41"},{"size":241,"mtime":1601832347962,"results":"45","hashOfConfig":"41"},{"size":86,"mtime":1601747194738,"results":"46","hashOfConfig":"41"},{"size":5440,"mtime":1632884144447,"results":"47","hashOfConfig":"41"},{"size":588,"mtime":1629855672627,"results":"48","hashOfConfig":"41"},{"size":304,"mtime":1632882585664,"results":"49","hashOfConfig":"41"},{"size":3457,"mtime":1632884133896,"results":"50","hashOfConfig":"41"},{"size":6999,"mtime":1632883152730,"results":"51","hashOfConfig":"41"},{"size":326,"mtime":1632883064846,"results":"52","hashOfConfig":"41"},{"size":304,"mtime":1632883323779,"results":"53","hashOfConfig":"41"},{"size":12792,"mtime":1632882663919,"results":"54","hashOfConfig":"41"},{"size":289,"mtime":1632883670529,"results":"55","hashOfConfig":"41"},{"size":10483,"mtime":1632883207178,"results":"56","hashOfConfig":"41"},{"size":6993,"mtime":1629855672622,"results":"57","hashOfConfig":"41"},{"size":316,"mtime":1629855672622,"results":"58","hashOfConfig":"41"},{"size":10632,"mtime":1632883854792,"results":"59","hashOfConfig":"41"},{"size":298,"mtime":1629857818384,"results":"60","hashOfConfig":"41"},{"size":5604,"mtime":1629858821121,"results":"61","hashOfConfig":"41"},{"size":2229,"mtime":1632882225697,"results":"62","hashOfConfig":"41"},{"size":2504,"mtime":1632882572518,"results":"63","hashOfConfig":"41"},{"size":2456,"mtime":1632883113673,"results":"64","hashOfConfig":"41"},{"size":2715,"mtime":1632883353136,"results":"65","hashOfConfig":"41"},{"size":2828,"mtime":1629855672621,"results":"66","hashOfConfig":"41"},{"size":1662,"mtime":1629855672574,"results":"67","hashOfConfig":"41"},{"size":1662,"mtime":1629855672574,"results":"68","hashOfConfig":"41"},{"size":1482,"mtime":1629855672575,"results":"69","hashOfConfig":"41"},{"size":1596,"mtime":1629855672574,"results":"70","hashOfConfig":"41"},{"size":1596,"mtime":1629855672573,"results":"71","hashOfConfig":"41"},{"size":1997,"mtime":1632879001716,"results":"72","hashOfConfig":"41"},{"size":2221,"mtime":1601747481778,"results":"73","hashOfConfig":"41"},{"size":1319,"mtime":1632883311014,"results":"74","hashOfConfig":"41"},{"size":852,"mtime":1629855672621,"results":"75","hashOfConfig":"41"},{"size":852,"mtime":1632883052057,"results":"76","hashOfConfig":"41"},{"size":1273,"mtime":1632882990257,"results":"77","hashOfConfig":"41"},{"size":2454,"mtime":1632883655824,"results":"78","hashOfConfig":"41"},{"size":1287,"mtime":1632883779747,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"167akyx",{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"82"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"82"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"82"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"82"},"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\index.js",[],["180","181"],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\App.js",[],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\Routes.js",[],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\auth\\auth.js",[],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\templates\\Loading.js",[],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\history.js",[],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\login\\SignUpPage.js",["182"],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\dashboard\\DashboardPage.js",[],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\customer\\CustomerPage.js",[],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\login\\LoginForm.js",[],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\customerlog\\CustomerlogAddUpdatePage.js",["183","184","185","186","187","188","189"],"import {withRouter} from \"react-router\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, {useEffect, useState} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Switch} from \"@material-ui/core\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PageTemplate from \"../templates/Template\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport history from '../../history';\r\nimport {addCustomerlog, getCustomerlog,getOneCustomerlog, updateCustomerlog} from \"../../repo/customerlogRepo\";\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nfunction validateEmail(email){\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\nconst CustomerlogAddUpdatePage = (props)=>{\r\n    const [alertState, setAlertstate] = useState({\r\n        open: false,\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n        severity: \"success\",\r\n        message:\"\",\r\n      });\r\n    const { vertical, horizontal, open, severity, message } = alertState;\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [customerlog,setCustomerlog] = useState(undefined)\r\n    \r\n\r\n    const checkErrors = () => {\r\n        let errorList = {}\r\n        if(customerlog.LogDate === \"\" || customerlog.LogDate === undefined)\r\n{\r\n   errorList = { ...errorList,LogDate: \"¡Campo requerido!\"}\r\n}\r\nif(customerlog.LogOper === \"\" || customerlog.LogOper === undefined)\r\n{\r\n   errorList = { ...errorList,LogOper: \"¡Campo requerido!\"}\r\n}\r\n\r\n\r\n        setErrorMessages(errorList)\r\n        return errorList\r\n    }\r\n\r\n    useEffect(()=>{\r\n    \r\n      \r\n        if(props.match.params.id) {\r\n            getOneCustomerlog(props.match.params.id).then((res) => {\r\n                setCustomerlog(res.data.document)\r\n            })\r\n        }else{\r\n            setCustomerlog({})\r\n        }\r\n    },[props.match.params.id])\r\n   \r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n        const errors = checkErrors()\r\n        //if no errors then send data\r\n        if(Object.keys(errors).length<1) {\r\n            if (customerlog.CustomerId) {\r\n               var updateResponse =  await updateCustomerlog(customerlog.CustomerId,customerlog);\r\n               if(updateResponse && updateResponse.data){\r\n                   if(updateResponse.data.code===1){\r\n                    setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Record Updated Successfully.\",severity:\"success\"});\r\n                     }else{\r\n                    setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Updated failed. Please try again.\", severity:\"error\"});\r\n                }\r\n               }else{\r\n                setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Updated failed. Please try again.\", severity:\"error\"});\r\n            }\r\n                //props.history.push(\"/\");\r\n            } else {\r\n                var addResponse = await addCustomerlog(customerlog)\r\n                if(addResponse && addResponse.data){\r\n                    if(addResponse.data.code===1){\r\n                        setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Record Added Successfully.\",severity:\"success\"});\r\n                          }else{\r\n                        setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Add Record Failed. Please try again.\",severity:\"error\"});\r\n                    }\r\n                }else{\r\n                    setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Add Record Failed. Please try again.\",severity:\"error\"});\r\n                    \r\n                }\r\n                //props.history.push(\"/\");\r\n            }\r\n        }else{\r\n            setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Invalid Data. Please try again.\",severity:\"error\"});\r\n                   \r\n        } \r\n    }catch (e) {\r\n        setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Invalid Data. Please try again.\",severity:\"error\"});\r\n            \r\n    }\r\n\r\n    }\r\n   \r\n    const hideAlert = () => {\r\n        setAlertstate({ ...alertState, open: false });\r\n      };\r\n    return(\r\n        <PageTemplate title=\"Add/Update Customerlog\">\r\n            <Card>\r\n            <CardContent>\r\n                <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n               \r\n                    {(customerlog!==undefined )?\r\n                        <Grid spacing={3} container>\r\n                           <Grid xs={12} md={6} key={\"0\"} item>\r\n<TextField required autoFocus fullWidth\r\nhelperText ={errorMessages.LogDate}\r\ntype ={\"date\"}\r\nInputLabelProps ={{ shrink: true, }}\r\nonChange={(e)=>{setCustomerlog({...customerlog,LogDate:e.target.value});checkErrors()}}\r\ndefaultValue ={customerlog.LogDate}\r\nerror ={(errorMessages.LogDate)?true:false}\r\nlabel ={\"LogDate\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"1\"} item>\r\n<TextField required autoFocus fullWidth\r\nhelperText ={errorMessages.LogOper}\r\ntype ={\"text\"}\r\nonChange={(e)=>{setCustomerlog({...customerlog,LogOper:e.target.value});checkErrors()}}\r\ndefaultValue ={customerlog.LogOper}\r\nerror ={(errorMessages.LogOper)?true:false}\r\nlabel ={\"LogOper\"}/>\r\n</ Grid >\r\n<Grid xs={12}  md={6} item key={\"2\"}>\r\n<Grid container justify={\"flex-end\"} alignContent={\"flex-end\"}>\r\n<Button onClick={() => history.push('/customerlog')} variant={\"contained\"} type={\"Button\"} color=\"secondary\">Cancel</Button>\r\n</Grid>\r\n</Grid>\r\n<Grid xs={12}  md={6} item key={\"3\"}>\r\n<Grid container justify={\"flex-end\"} alignContent={\"flex-end\"}>\r\n<Button variant={\"contained\"} color=\"primary\"  type={\"Sumbit\"}>Save</Button>\r\n</Grid>\r\n</Grid>\r\n\r\n                        </Grid>\r\n                        :null}\r\n                </form>\r\n                \r\n               \r\n                </CardContent>\r\n                </Card>\r\n                <Snackbar autoHideDuration={6000}\r\n                    anchorOrigin={{ vertical, horizontal }}\r\n                    open={open}\r\n                    onClose={hideAlert}\r\n                    key={vertical + horizontal}>\r\n                       <Alert onClose={hideAlert}  severity={severity}>\r\n                       {message}\r\n                    </Alert>\r\n                </Snackbar>\r\n        </PageTemplate>\r\n    )\r\n}\r\n\r\nexport default withRouter(CustomerlogAddUpdatePage)\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\customerlog\\CustomerlogPage.js",[],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\document\\DocumentPage.js",[],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\customer\\CustomerAddUpdatePage.js",["190","191","192","193","194","195","196"],"import {withRouter} from \"react-router\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, {useEffect, useState} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Switch} from \"@material-ui/core\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PageTemplate from \"../templates/Template\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport history from '../../history';\r\nimport {addCustomer, getCustomer,getOneCustomer, updateCustomer} from \"../../repo/customerRepo\";\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nfunction validateEmail(email){\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\nconst CustomerAddUpdatePage = (props)=>{\r\n    const [alertState, setAlertstate] = useState({\r\n        open: false,\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n        severity: \"success\",\r\n        message:\"\",\r\n      });\r\n    const { vertical, horizontal, open, severity, message } = alertState;\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [customer,setCustomer] = useState(undefined)\r\n    \r\n\r\n    const checkErrors = () => {\r\n        let errorList = {}\r\n        if(customer.CustName === \"\" || customer.CustName === undefined)\r\n{\r\n   errorList = { ...errorList,CustName: \"¡Campo requerido!\"}\r\n}\r\n\r\n\r\n        setErrorMessages(errorList)\r\n        return errorList\r\n    }\r\n\r\n    useEffect(()=>{\r\n    \r\n      \r\n        if(props.match.params.id) {\r\n            getOneCustomer(props.match.params.id).then((res) => {\r\n                setCustomer(res.data.document)\r\n            })\r\n        }else{\r\n            setCustomer({})\r\n        }\r\n    },[props.match.params.id])\r\n   \r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n        const errors = checkErrors()\r\n        //if no errors then send data\r\n        if(Object.keys(errors).length<1) {\r\n            if (customer.CustomerId) {\r\n               var updateResponse =  await updateCustomer(customer.CustomerId,customer);\r\n               if(updateResponse && updateResponse.data){\r\n                   if(updateResponse.data.code===1){\r\n                    setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Record Updated Successfully.\",severity:\"success\"});\r\n                     }else{\r\n                    setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Updated failed. Please try again.\", severity:\"error\"});\r\n                }\r\n               }else{\r\n                setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Updated failed. Please try again.\", severity:\"error\"});\r\n            }\r\n                //props.history.push(\"/\");\r\n            } else {\r\n                var addResponse = await addCustomer(customer)\r\n                if(addResponse && addResponse.data){\r\n                    if(addResponse.data.code===1){\r\n                        setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Record Added Successfully.\",severity:\"success\"});\r\n                          }else{\r\n                        setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Add Record Failed. Please try again.\",severity:\"error\"});\r\n                    }\r\n                }else{\r\n                    setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Add Record Failed. Please try again.\",severity:\"error\"});\r\n                    \r\n                }\r\n                //props.history.push(\"/\");\r\n            }\r\n        }else{\r\n            setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Invalid Data. Please try again.\",severity:\"error\"});\r\n                   \r\n        } \r\n    }catch (e) {\r\n        setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Invalid Data. Please try again.\",severity:\"error\"});\r\n            \r\n    }\r\n\r\n    }\r\n   \r\n    const hideAlert = () => {\r\n        setAlertstate({ ...alertState, open: false });\r\n      };\r\n    return(\r\n        <PageTemplate title=\"Add/Update Customer\">\r\n            <Card>\r\n            <CardContent>\r\n                <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n               \r\n                    {(customer!==undefined )?\r\n                        <Grid spacing={3} container>\r\n                           <Grid xs={12} md={6} key={\"0\"} item>\r\n<TextField required autoFocus fullWidth\r\nhelperText ={errorMessages.CustName}\r\ntype ={\"text\"}\r\nonChange={(e)=>{setCustomer({...customer,CustName:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustName}\r\nerror ={(errorMessages.CustName)?true:false}\r\nlabel ={\"CustName\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"1\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustIdentity}\r\ntype ={\"text\"}\r\nonChange={(e)=>{setCustomer({...customer,CustIdentity:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustIdentity}\r\nerror ={(errorMessages.CustIdentity)?true:false}\r\nlabel ={\"CustIdentity\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"2\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustCert}\r\ntype ={\"text\"}\r\nonChange={(e)=>{setCustomer({...customer,CustCert:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustCert}\r\nerror ={(errorMessages.CustCert)?true:false}\r\nlabel ={\"CustCert\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"3\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustDocType}\r\ntype ={\"number\"}\r\nonChange={(e)=>{setCustomer({...customer,CustDocType:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustDocType}\r\nerror ={(errorMessages.CustDocType)?true:false}\r\nlabel ={\"CustDocType\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"4\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustFinalDate}\r\ntype ={\"date\"}\r\nInputLabelProps ={{ shrink: true, }}\r\nonChange={(e)=>{setCustomer({...customer,CustFinalDate:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustFinalDate}\r\nerror ={(errorMessages.CustFinalDate)?true:false}\r\nlabel ={\"CustFinalDate\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"5\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustActivationDate}\r\ntype ={\"date\"}\r\nInputLabelProps ={{ shrink: true, }}\r\nonChange={(e)=>{setCustomer({...customer,CustActivationDate:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustActivationDate}\r\nerror ={(errorMessages.CustActivationDate)?true:false}\r\nlabel ={\"CustActivationDate\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"6\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustSale}\r\ntype ={\"number\"}\r\nonChange={(e)=>{setCustomer({...customer,CustSale:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustSale}\r\nerror ={(errorMessages.CustSale)?true:false}\r\nlabel ={\"CustSale\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"7\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustPay}\r\ntype ={\"number\"}\r\nonChange={(e)=>{setCustomer({...customer,CustPay:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustPay}\r\nerror ={(errorMessages.CustPay)?true:false}\r\nlabel ={\"CustPay\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"8\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustReLoad}\r\ntype ={\"number\"}\r\nonChange={(e)=>{setCustomer({...customer,CustReLoad:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustReLoad}\r\nerror ={(errorMessages.CustReLoad)?true:false}\r\nlabel ={\"CustReLoad\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"9\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustStatus}\r\ntype ={\"text\"}\r\nonChange={(e)=>{setCustomer({...customer,CustStatus:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustStatus}\r\nerror ={(errorMessages.CustStatus)?true:false}\r\nlabel ={\"CustStatus\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"10\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustInfoAdic1}\r\ntype ={\"text\"}\r\nonChange={(e)=>{setCustomer({...customer,CustInfoAdic1:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustInfoAdic1}\r\nerror ={(errorMessages.CustInfoAdic1)?true:false}\r\nlabel ={\"CustInfoAdic1\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"11\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustInfoAdic2}\r\ntype ={\"text\"}\r\nonChange={(e)=>{setCustomer({...customer,CustInfoAdic2:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustInfoAdic2}\r\nerror ={(errorMessages.CustInfoAdic2)?true:false}\r\nlabel ={\"CustInfoAdic2\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"12\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustInfoAdic3}\r\ntype ={\"text\"}\r\nonChange={(e)=>{setCustomer({...customer,CustInfoAdic3:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustInfoAdic3}\r\nerror ={(errorMessages.CustInfoAdic3)?true:false}\r\nlabel ={\"CustInfoAdic3\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"13\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustInfoAdic4}\r\ntype ={\"text\"}\r\nonChange={(e)=>{setCustomer({...customer,CustInfoAdic4:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustInfoAdic4}\r\nerror ={(errorMessages.CustInfoAdic4)?true:false}\r\nlabel ={\"CustInfoAdic4\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"14\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustDateAdic1}\r\ntype ={\"date\"}\r\nInputLabelProps ={{ shrink: true, }}\r\nonChange={(e)=>{setCustomer({...customer,CustDateAdic1:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustDateAdic1}\r\nerror ={(errorMessages.CustDateAdic1)?true:false}\r\nlabel ={\"CustDateAdic1\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"15\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustDateAdic2}\r\ntype ={\"date\"}\r\nInputLabelProps ={{ shrink: true, }}\r\nonChange={(e)=>{setCustomer({...customer,CustDateAdic2:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustDateAdic2}\r\nerror ={(errorMessages.CustDateAdic2)?true:false}\r\nlabel ={\"CustDateAdic2\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"16\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustValueAdic1}\r\ntype ={\"number\"}\r\nonChange={(e)=>{setCustomer({...customer,CustValueAdic1:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustValueAdic1}\r\nerror ={(errorMessages.CustValueAdic1)?true:false}\r\nlabel ={\"CustValueAdic1\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"17\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustValueAdic2}\r\ntype ={\"number\"}\r\nonChange={(e)=>{setCustomer({...customer,CustValueAdic2:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustValueAdic2}\r\nerror ={(errorMessages.CustValueAdic2)?true:false}\r\nlabel ={\"CustValueAdic2\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"18\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CustValueAdic3}\r\ntype ={\"number\"}\r\nonChange={(e)=>{setCustomer({...customer,CustValueAdic3:e.target.value});checkErrors()}}\r\ndefaultValue ={customer.CustValueAdic3}\r\nerror ={(errorMessages.CustValueAdic3)?true:false}\r\nlabel ={\"CustValueAdic3\"}/>\r\n</ Grid >\r\n<Grid xs={12}  md={6} item key={\"19\"}>\r\n<Grid container justify={\"flex-end\"} alignContent={\"flex-end\"}>\r\n<Button onClick={() => history.push('/customer')} variant={\"contained\"} type={\"Button\"} color=\"secondary\">Cancel</Button>\r\n</Grid>\r\n</Grid>\r\n<Grid xs={12}  md={6} item key={\"20\"}>\r\n<Grid container justify={\"flex-end\"} alignContent={\"flex-end\"}>\r\n<Button variant={\"contained\"} color=\"primary\"  type={\"Sumbit\"}>Save</Button>\r\n</Grid>\r\n</Grid>\r\n\r\n                        </Grid>\r\n                        :null}\r\n                </form>\r\n                \r\n               \r\n                </CardContent>\r\n                </Card>\r\n                <Snackbar autoHideDuration={6000}\r\n                    anchorOrigin={{ vertical, horizontal }}\r\n                    open={open}\r\n                    onClose={hideAlert}\r\n                    key={vertical + horizontal}>\r\n                       <Alert onClose={hideAlert}  severity={severity}>\r\n                       {message}\r\n                    </Alert>\r\n                </Snackbar>\r\n        </PageTemplate>\r\n    )\r\n}\r\n\r\nexport default withRouter(CustomerAddUpdatePage)\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\users\\UsersPage.js",[],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\document\\DocumentAddUpdatePage.js",["197","198","199","200"],"import {withRouter} from \"react-router\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, {useEffect, useState} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Switch} from \"@material-ui/core\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PageTemplate from \"../templates/Template\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport history from '../../history';\r\nimport {addDocument, getDocument,getOneDocument, updateDocument} from \"../../repo/documentRepo\";\r\nimport {getCustomer} from \"../../repo/customerRepo\";\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nfunction validateEmail(email){\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\nconst DocumentAddUpdatePage = (props)=>{\r\n    const [alertState, setAlertstate] = useState({\r\n        open: false,\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n        severity: \"success\",\r\n        message:\"\",\r\n      });\r\n    const { vertical, horizontal, open, severity, message } = alertState;\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [document,setDocument] = useState(undefined)\r\n    const [customer,setCustomer] = useState(undefined)\r\n\r\n\r\n    const checkErrors = () => {\r\n        let errorList = {}\r\n        if(document.CustomerId === \"\" || document.CustomerId === undefined)\r\n{\r\n   errorList = { ...errorList,CustomerId: \"¡Campo requerido!\"}\r\n}\r\nif(document.DocType === \"\" || document.DocType === undefined)\r\n{\r\n   errorList = { ...errorList,DocType: \"¡Campo requerido!\"}\r\n}\r\nif(document.DocIdentity === \"\" || document.DocIdentity === undefined)\r\n{\r\n   errorList = { ...errorList,DocIdentity: \"¡Campo requerido!\"}\r\n}\r\nif(document.CreatedDate === \"\" || document.CreatedDate === undefined)\r\n{\r\n   errorList = { ...errorList,CreatedDate: \"¡Campo requerido!\"}\r\n}\r\n\r\n\r\n        setErrorMessages(errorList)\r\n        return errorList\r\n    }\r\n\r\n    useEffect(()=>{\r\n    getCustomer(0,200,\"\").then((res)=>{ setCustomer(res.records) })\r\n\r\n      \r\n        if(props.match.params.id) {\r\n            getOneDocument(props.match.params.id).then((res) => {\r\n                setDocument(res.data.document)\r\n            })\r\n        }else{\r\n            setDocument({})\r\n        }\r\n    },[props.match.params.id])\r\n   \r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n        const errors = checkErrors()\r\n        //if no errors then send data\r\n        if(Object.keys(errors).length<1) {\r\n            if (document.DocumentId) {\r\n               var updateResponse =  await updateDocument(document.DocumentId,document);\r\n               if(updateResponse && updateResponse.data){\r\n                   if(updateResponse.data.code===1){\r\n                    setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Record Updated Successfully.\",severity:\"success\"});\r\n                     }else{\r\n                    setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Updated failed. Please try again.\", severity:\"error\"});\r\n                }\r\n               }else{\r\n                setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Updated failed. Please try again.\", severity:\"error\"});\r\n            }\r\n                //props.history.push(\"/\");\r\n            } else {\r\n                var addResponse = await addDocument(document)\r\n                if(addResponse && addResponse.data){\r\n                    if(addResponse.data.code===1){\r\n                        setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Record Added Successfully.\",severity:\"success\"});\r\n                          }else{\r\n                        setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Add Record Failed. Please try again.\",severity:\"error\"});\r\n                    }\r\n                }else{\r\n                    setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Add Record Failed. Please try again.\",severity:\"error\"});\r\n                    \r\n                }\r\n                //props.history.push(\"/\");\r\n            }\r\n        }else{\r\n            setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Invalid Data. Please try again.\",severity:\"error\"});\r\n                   \r\n        } \r\n    }catch (e) {\r\n        setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Invalid Data. Please try again.\",severity:\"error\"});\r\n            \r\n    }\r\n\r\n    }\r\n   \r\n    const hideAlert = () => {\r\n        setAlertstate({ ...alertState, open: false });\r\n      };\r\n    return(\r\n        <PageTemplate title=\"Add/Update Document\">\r\n            <Card>\r\n            <CardContent>\r\n                <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n               \r\n                    {(document!==undefined  && customer!==undefined)?\r\n                        <Grid spacing={3} container>\r\n                           <Grid xs={12} md={6} key={\"1\"} item>\r\n<TextField required autoFocus fullWidth\r\nhelperText ={errorMessages.DocType}\r\ntype ={\"number\"}\r\nonChange={(e)=>{setDocument({...document,DocType:e.target.value});checkErrors()}}\r\ndefaultValue ={document.DocType}\r\nerror ={(errorMessages.DocType)?true:false}\r\nlabel ={\"DocType\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"2\"} item>\r\n<TextField required autoFocus fullWidth\r\nhelperText ={errorMessages.DocIdentity}\r\ntype ={\"text\"}\r\nonChange={(e)=>{setDocument({...document,DocIdentity:e.target.value});checkErrors()}}\r\ndefaultValue ={document.DocIdentity}\r\nerror ={(errorMessages.DocIdentity)?true:false}\r\nlabel ={\"DocIdentity\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"3\"} item>\r\n<TextField required autoFocus fullWidth\r\nhelperText ={errorMessages.CreatedDate}\r\ntype ={\"date\"}\r\nInputLabelProps ={{ shrink: true, }}\r\nonChange={(e)=>{setDocument({...document,CreatedDate:e.target.value});checkErrors()}}\r\ndefaultValue ={document.CreatedDate}\r\nerror ={(errorMessages.CreatedDate)?true:false}\r\nlabel ={\"CreatedDate\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"4\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.ActivateDate}\r\ntype ={\"date\"}\r\nInputLabelProps ={{ shrink: true, }}\r\nonChange={(e)=>{setDocument({...document,ActivateDate:e.target.value});checkErrors()}}\r\ndefaultValue ={document.ActivateDate}\r\nerror ={(errorMessages.ActivateDate)?true:false}\r\nlabel ={\"ActivateDate\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"5\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.CancelDate}\r\ntype ={\"date\"}\r\nInputLabelProps ={{ shrink: true, }}\r\nonChange={(e)=>{setDocument({...document,CancelDate:e.target.value});checkErrors()}}\r\ndefaultValue ={document.CancelDate}\r\nerror ={(errorMessages.CancelDate)?true:false}\r\nlabel ={\"CancelDate\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"6\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.InAmount}\r\ntype ={\"number\"}\r\nonChange={(e)=>{setDocument({...document,InAmount:e.target.value});checkErrors()}}\r\ndefaultValue ={document.InAmount}\r\nerror ={(errorMessages.InAmount)?true:false}\r\nlabel ={\"InAmount\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"7\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.OutAmount}\r\ntype ={\"number\"}\r\nonChange={(e)=>{setDocument({...document,OutAmount:e.target.value});checkErrors()}}\r\ndefaultValue ={document.OutAmount}\r\nerror ={(errorMessages.OutAmount)?true:false}\r\nlabel ={\"OutAmount\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"8\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.BalanceAmount}\r\ntype ={\"number\"}\r\nonChange={(e)=>{setDocument({...document,BalanceAmount:e.target.value});checkErrors()}}\r\ndefaultValue ={document.BalanceAmount}\r\nerror ={(errorMessages.BalanceAmount)?true:false}\r\nlabel ={\"BalanceAmount\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"9\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.DocStatus}\r\ntype ={\"text\"}\r\nonChange={(e)=>{setDocument({...document,DocStatus:e.target.value});checkErrors()}}\r\ndefaultValue ={document.DocStatus}\r\nerror ={(errorMessages.DocStatus)?true:false}\r\nlabel ={\"DocStatus\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"10\"} item >\r\n<InputLabel style={{textAlign: 'left'}}>CustomerId</InputLabel>\r\n        <Select style={{width: '100%',textAlign: 'left'}}\r\n                              labelId =\"CustomerId\"\r\n                              id=\"CustomerId\"\r\n                              value={document.CustomerId}\r\n                              onChange ={(e)=>{setDocument({...document,CustomerId:e.target.value});checkErrors()}}>\r\n                              {customer.map((key)=><MenuItem key={key.CustomerId} value={key.CustomerId}>{key.CustName}</MenuItem>)}\r\n                          </Select>\r\n    </Grid>\r\n<Grid xs={12}  md={6} item key={\"11\"}>\r\n<Grid container justify={\"flex-end\"} alignContent={\"flex-end\"}>\r\n<Button onClick={() => history.push('/document')} variant={\"contained\"} type={\"Button\"} color=\"secondary\">Cancel</Button>\r\n</Grid>\r\n</Grid>\r\n<Grid xs={12}  md={6} item key={\"12\"}>\r\n<Grid container justify={\"flex-end\"} alignContent={\"flex-end\"}>\r\n<Button variant={\"contained\"} color=\"primary\"  type={\"Sumbit\"}>Save</Button>\r\n</Grid>\r\n</Grid>\r\n\r\n                        </Grid>\r\n                        :null}\r\n                </form>\r\n                \r\n               \r\n                </CardContent>\r\n                </Card>\r\n                <Snackbar autoHideDuration={6000}\r\n                    anchorOrigin={{ vertical, horizontal }}\r\n                    open={open}\r\n                    onClose={hideAlert}\r\n                    key={vertical + horizontal}>\r\n                       <Alert onClose={hideAlert}  severity={severity}>\r\n                       {message}\r\n                    </Alert>\r\n                </Snackbar>\r\n        </PageTemplate>\r\n    )\r\n}\r\n\r\nexport default withRouter(DocumentAddUpdatePage)\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\documentlog\\DocumentlogAddUpdatePage.js",["201","202","203","204","205","206","207"],"import {withRouter} from \"react-router\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, {useEffect, useState} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Switch} from \"@material-ui/core\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PageTemplate from \"../templates/Template\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport history from '../../history';\r\nimport {addDocumentlog, getDocumentlog,getOneDocumentlog, updateDocumentlog} from \"../../repo/documentlogRepo\";\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nfunction validateEmail(email){\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\nconst DocumentlogAddUpdatePage = (props)=>{\r\n    const [alertState, setAlertstate] = useState({\r\n        open: false,\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n        severity: \"success\",\r\n        message:\"\",\r\n      });\r\n    const { vertical, horizontal, open, severity, message } = alertState;\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [documentlog,setDocumentlog] = useState(undefined)\r\n    \r\n\r\n    const checkErrors = () => {\r\n        let errorList = {}\r\n        if(documentlog.LogDate === \"\" || documentlog.LogDate === undefined)\r\n{\r\n   errorList = { ...errorList,LogDate: \"Required field!\"}\r\n}\r\nif(documentlog.LogOper === \"\" || documentlog.LogOper === undefined)\r\n{\r\n   errorList = { ...errorList,LogOper: \"Required field!\"}\r\n}\r\n\r\n\r\n        setErrorMessages(errorList)\r\n        return errorList\r\n    }\r\n\r\n    useEffect(()=>{\r\n    \r\n      \r\n        if(props.match.params.id) {\r\n            getOneDocumentlog(props.match.params.id).then((res) => {\r\n                setDocumentlog(res.data.document)\r\n            })\r\n        }else{\r\n            setDocumentlog({})\r\n        }\r\n    },[props.match.params.id])\r\n   \r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n        const errors = checkErrors()\r\n        //if no errors then send data\r\n        if(Object.keys(errors).length<1) {\r\n            if (documentlog.DocumentId) {\r\n               var updateResponse =  await updateDocumentlog(documentlog.DocumentId,documentlog);\r\n               if(updateResponse && updateResponse.data){\r\n                   if(updateResponse.data.code===1){\r\n                    setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Record Updated Successfully.\",severity:\"success\"});\r\n                     }else{\r\n                    setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Updated failed. Please try again.\", severity:\"error\"});\r\n                }\r\n               }else{\r\n                setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Updated failed. Please try again.\", severity:\"error\"});\r\n            }\r\n                //props.history.push(\"/\");\r\n            } else {\r\n                var addResponse = await addDocumentlog(documentlog)\r\n                if(addResponse && addResponse.data){\r\n                    if(addResponse.data.code===1){\r\n                        setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Record Added Successfully.\",severity:\"success\"});\r\n                          }else{\r\n                        setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Add Record Failed. Please try again.\",severity:\"error\"});\r\n                    }\r\n                }else{\r\n                    setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Add Record Failed. Please try again.\",severity:\"error\"});\r\n                    \r\n                }\r\n                //props.history.push(\"/\");\r\n            }\r\n        }else{\r\n            setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Invalid Data. Please try again.\",severity:\"error\"});\r\n                   \r\n        } \r\n    }catch (e) {\r\n        setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Invalid Data. Please try again.\",severity:\"error\"});\r\n            \r\n    }\r\n\r\n    }\r\n   \r\n    const hideAlert = () => {\r\n        setAlertstate({ ...alertState, open: false });\r\n      };\r\n    return(\r\n        <PageTemplate title=\"Add/Update Documentlog\">\r\n            <Card>\r\n            <CardContent>\r\n                <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n               \r\n                    {(documentlog!==undefined )?\r\n                        <Grid spacing={3} container>\r\n                           <Grid xs={12} md={6} key={\"0\"} item>\r\n<TextField required autoFocus fullWidth\r\nhelperText ={errorMessages.LogDate}\r\ntype ={\"date\"}\r\nInputLabelProps ={{ shrink: true, }}\r\nonChange={(e)=>{setDocumentlog({...documentlog,LogDate:e.target.value});checkErrors()}}\r\ndefaultValue ={documentlog.LogDate}\r\nerror ={(errorMessages.LogDate)?true:false}\r\nlabel ={\"LogDate\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"1\"} item>\r\n<TextField required autoFocus fullWidth\r\nhelperText ={errorMessages.LogOper}\r\ntype ={\"text\"}\r\nonChange={(e)=>{setDocumentlog({...documentlog,LogOper:e.target.value});checkErrors()}}\r\ndefaultValue ={documentlog.LogOper}\r\nerror ={(errorMessages.LogOper)?true:false}\r\nlabel ={\"LogOper\"}/>\r\n</ Grid >\r\n<Grid xs={12}  md={6} item key={\"2\"}>\r\n<Grid container justify={\"flex-end\"} alignContent={\"flex-end\"}>\r\n<Button onClick={() => history.push('/documentlog')} variant={\"contained\"} type={\"Button\"} color=\"secondary\">Cancel</Button>\r\n</Grid>\r\n</Grid>\r\n<Grid xs={12}  md={6} item key={\"3\"}>\r\n<Grid container justify={\"flex-end\"} alignContent={\"flex-end\"}>\r\n<Button variant={\"contained\"} color=\"primary\"  type={\"Sumbit\"}>Save</Button>\r\n</Grid>\r\n</Grid>\r\n\r\n                        </Grid>\r\n                        :null}\r\n                </form>\r\n                \r\n               \r\n                </CardContent>\r\n                </Card>\r\n                <Snackbar autoHideDuration={6000}\r\n                    anchorOrigin={{ vertical, horizontal }}\r\n                    open={open}\r\n                    onClose={hideAlert}\r\n                    key={vertical + horizontal}>\r\n                       <Alert onClose={hideAlert}  severity={severity}>\r\n                       {message}\r\n                    </Alert>\r\n                </Snackbar>\r\n        </PageTemplate>\r\n    )\r\n}\r\n\r\nexport default withRouter(DocumentlogAddUpdatePage)\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\documentlog\\DocumentlogPage.js",[],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\users\\UsersAddUpdatePage.js",["208","209","210","211","212","213"],"import {withRouter} from \"react-router\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, {useEffect, useState} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Switch} from \"@material-ui/core\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PageTemplate from \"../templates/Template\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport history from '../../history';\r\nimport {addUsers, getUsers,getOneUsers, updateUsers} from \"../../repo/usersRepo\";\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nfunction validateEmail(email){\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\nconst UsersAddUpdatePage = (props)=>{\r\n    const [alertState, setAlertstate] = useState({\r\n        open: false,\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n        severity: \"success\",\r\n        message:\"\",\r\n      });\r\n    const { vertical, horizontal, open, severity, message } = alertState;\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [users,setUsers] = useState(undefined)\r\n    \r\n\r\n    const checkErrors = () => {\r\n        let errorList = {}\r\n        if(users.AccountId === \"\" || users.AccountId === undefined)\r\n{\r\n   errorList = { ...errorList,AccountId: \"¡Campo requerido!\"}\r\n}\r\nif(users.UserName === \"\" || users.UserName === undefined)\r\n{\r\n   errorList = { ...errorList,UserName: \"¡Campo requerido!\"}\r\n}\r\nif(users.Password === \"\" || users.Password === undefined)\r\n{\r\n   errorList = { ...errorList,Password: \"¡Campo requerido!\"}\r\n}\r\nif(users.Email === \"\" || validateEmail(users.Email) === false)\r\n{\r\n   errorList = { ...errorList,Email: \"¡Introduzca un correo electrónico válido!\"}\r\n}\r\nif(users.IsActive === \"\" || users.IsActive === undefined)\r\n{\r\n   errorList = { ...errorList,IsActive: \"¡Campo requerido!\"}\r\n}\r\nif(users.IsAdmin === \"\" || users.IsAdmin === undefined)\r\n{\r\n   errorList = { ...errorList,IsAdmin: \"¡Campo requerido!\"}\r\n}\r\nif(users.CreatedDate === \"\" || users.CreatedDate === undefined)\r\n{\r\n   errorList = { ...errorList,CreatedDate: \"¡Campo requerido!\"}\r\n}\r\nif(users.Creator === \"\" || users.Creator === undefined)\r\n{\r\n   errorList = { ...errorList,Creator: \"¡Campo requerido!\"}\r\n}\r\n\r\n\r\n        setErrorMessages(errorList)\r\n        return errorList\r\n    }\r\n\r\n    useEffect(()=>{\r\n    \r\n      \r\n        if(props.match.params.id) {\r\n            getOneUsers(props.match.params.id).then((res) => {\r\n                setUsers(res.data.document)\r\n            })\r\n        }else{\r\n            setUsers({})\r\n        }\r\n    },[props.match.params.id])\r\n   \r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n        const errors = checkErrors()\r\n        //if no errors then send data\r\n        if(Object.keys(errors).length<1) {\r\n            if (users.Id) {\r\n               var updateResponse =  await updateUsers(users.Id,users);\r\n               if(updateResponse && updateResponse.data){\r\n                   if(updateResponse.data.code===1){\r\n                    setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Record Updated Successfully.\",severity:\"success\"});\r\n                     }else{\r\n                    setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Updated failed. Please try again.\", severity:\"error\"});\r\n                }\r\n               }else{\r\n                setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Updated failed. Please try again.\", severity:\"error\"});\r\n            }\r\n                //props.history.push(\"/\");\r\n            } else {\r\n                var addResponse = await addUsers(users)\r\n                if(addResponse && addResponse.data){\r\n                    if(addResponse.data.code===1){\r\n                        setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Record Added Successfully.\",severity:\"success\"});\r\n                          }else{\r\n                        setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Add Record Failed. Please try again.\",severity:\"error\"});\r\n                    }\r\n                }else{\r\n                    setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Add Record Failed. Please try again.\",severity:\"error\"});\r\n                    \r\n                }\r\n                //props.history.push(\"/\");\r\n            }\r\n        }else{\r\n            setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Invalid Data. Please try again.\",severity:\"error\"});\r\n                   \r\n        } \r\n    }catch (e) {\r\n        setAlertstate({ open: true, vertical: 'bottom', horizontal: 'center', message:\"Invalid Data. Please try again.\",severity:\"error\"});\r\n            \r\n    }\r\n\r\n    }\r\n   \r\n    const hideAlert = () => {\r\n        setAlertstate({ ...alertState, open: false });\r\n      };\r\n    return(\r\n        <PageTemplate title=\"Add/Update Users\">\r\n            <Card>\r\n            <CardContent>\r\n                <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n               \r\n                    {(users!==undefined )?\r\n                        <Grid spacing={3} container>\r\n                           <Grid xs={12} md={6} key={\"0\"} item>\r\n<TextField required autoFocus fullWidth\r\nhelperText ={errorMessages.AccountId}\r\ntype ={\"number\"}\r\nonChange={(e)=>{setUsers({...users,AccountId:e.target.value});checkErrors()}}\r\ndefaultValue ={users.AccountId}\r\nerror ={(errorMessages.AccountId)?true:false}\r\nlabel ={\"AccountId\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"1\"} item>\r\n<TextField required autoFocus fullWidth\r\nhelperText ={errorMessages.UserName}\r\ntype ={\"text\"}\r\nonChange={(e)=>{setUsers({...users,UserName:e.target.value});checkErrors()}}\r\ndefaultValue ={users.UserName}\r\nerror ={(errorMessages.UserName)?true:false}\r\nlabel ={\"UserName\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"2\"} item>\r\n<TextField required autoFocus fullWidth\r\nhelperText ={errorMessages.Password}\r\ntype ={\"password\"}\r\nonChange={(e)=>{setUsers({...users,Password:e.target.value});checkErrors()}}\r\ndefaultValue ={users.Password}\r\nerror ={(errorMessages.Password)?true:false}\r\nlabel ={\"Password\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"3\"} item>\r\n<TextField required autoFocus fullWidth\r\nhelperText ={errorMessages.Email}\r\ntype ={\"email\"}\r\nonChange={(e)=>{setUsers({...users,Email:e.target.value});checkErrors()}}\r\ndefaultValue ={users.Email}\r\nerror ={(errorMessages.Email)?true:false}\r\nlabel ={\"Email\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"4\"} item>\r\n<TextField required autoFocus fullWidth\r\nhelperText ={errorMessages.IsActive}\r\ntype ={\"number\"}\r\nonChange={(e)=>{setUsers({...users,IsActive:e.target.value});checkErrors()}}\r\ndefaultValue ={users.IsActive}\r\nerror ={(errorMessages.IsActive)?true:false}\r\nlabel ={\"IsActive\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"5\"} item>\r\n<TextField required autoFocus fullWidth\r\nhelperText ={errorMessages.IsAdmin}\r\ntype ={\"number\"}\r\nonChange={(e)=>{setUsers({...users,IsAdmin:e.target.value});checkErrors()}}\r\ndefaultValue ={users.IsAdmin}\r\nerror ={(errorMessages.IsAdmin)?true:false}\r\nlabel ={\"IsAdmin\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"6\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.LastLoginTime}\r\ntype ={\"date\"}\r\nInputLabelProps ={{ shrink: true, }}\r\nonChange={(e)=>{setUsers({...users,LastLoginTime:e.target.value});checkErrors()}}\r\ndefaultValue ={users.LastLoginTime}\r\nerror ={(errorMessages.LastLoginTime)?true:false}\r\nlabel ={\"LastLoginTime\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"7\"} item>\r\n<TextField required autoFocus fullWidth\r\nhelperText ={errorMessages.CreatedDate}\r\ntype ={\"date\"}\r\nInputLabelProps ={{ shrink: true, }}\r\nonChange={(e)=>{setUsers({...users,CreatedDate:e.target.value});checkErrors()}}\r\ndefaultValue ={users.CreatedDate}\r\nerror ={(errorMessages.CreatedDate)?true:false}\r\nlabel ={\"CreatedDate\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"8\"} item>\r\n<TextField required autoFocus fullWidth\r\nhelperText ={errorMessages.Creator}\r\ntype ={\"number\"}\r\nonChange={(e)=>{setUsers({...users,Creator:e.target.value});checkErrors()}}\r\ndefaultValue ={users.Creator}\r\nerror ={(errorMessages.Creator)?true:false}\r\nlabel ={\"Creator\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"9\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.ModifiedDate}\r\ntype ={\"date\"}\r\nInputLabelProps ={{ shrink: true, }}\r\nonChange={(e)=>{setUsers({...users,ModifiedDate:e.target.value});checkErrors()}}\r\ndefaultValue ={users.ModifiedDate}\r\nerror ={(errorMessages.ModifiedDate)?true:false}\r\nlabel ={\"ModifiedDate\"}/>\r\n</ Grid >\r\n<Grid xs={12} md={6} key={\"10\"} item>\r\n<TextField  autoFocus fullWidth\r\nhelperText ={errorMessages.Modifier}\r\ntype ={\"number\"}\r\nonChange={(e)=>{setUsers({...users,Modifier:e.target.value});checkErrors()}}\r\ndefaultValue ={users.Modifier}\r\nerror ={(errorMessages.Modifier)?true:false}\r\nlabel ={\"Modifier\"}/>\r\n</ Grid >\r\n<Grid xs={12}  md={6} item key={\"11\"}>\r\n<Grid container justify={\"flex-end\"} alignContent={\"flex-end\"}>\r\n<Button onClick={() => history.push('/users')} variant={\"contained\"} type={\"Button\"} color=\"secondary\">Cancel</Button>\r\n</Grid>\r\n</Grid>\r\n<Grid xs={12}  md={6} item key={\"12\"}>\r\n<Grid container justify={\"flex-end\"} alignContent={\"flex-end\"}>\r\n<Button variant={\"contained\"} color=\"primary\"  type={\"Sumbit\"}>Save</Button>\r\n</Grid>\r\n</Grid>\r\n\r\n                        </Grid>\r\n                        :null}\r\n                </form>\r\n                \r\n               \r\n                </CardContent>\r\n                </Card>\r\n                <Snackbar autoHideDuration={6000}\r\n                    anchorOrigin={{ vertical, horizontal }}\r\n                    open={open}\r\n                    onClose={hideAlert}\r\n                    key={vertical + horizontal}>\r\n                       <Alert onClose={hideAlert}  severity={severity}>\r\n                       {message}\r\n                    </Alert>\r\n                </Snackbar>\r\n        </PageTemplate>\r\n    )\r\n}\r\n\r\nexport default withRouter(UsersAddUpdatePage)\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\api\\axios.js",["214"],"\r\nimport axios from 'axios';\r\n\r\nconst apiUrl = 'http://localhost:8400'; //your api base url\r\nconst proxyurl = \"https://thingproxy.freeboard.io/fetch/\"; //proxy for local testing, remove this in production version\r\n\r\nconst api = axios.create({\r\n    baseURL:apiUrl,\r\n})\r\n\r\n\r\n\r\nexport default api;\r\n  ","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\templates\\Template.js",[],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\dashboard\\DashboardCard.js",[],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\customer\\CustomerTable.js",["215","216"],"import MaterialTable from 'material-table';\r\nimport React, {useEffect, useState} from 'react';\r\nimport tableIcons from '../templates/TableIcons';\r\nimport getColumns from './CustomerColumns';\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport {withRouter} from \"react-router\";\r\nimport {AddBox} from \"@material-ui/icons\";\r\nimport {deleteCustomer, getCustomer} from \"../../repo/customerRepo\";\r\n\r\n\r\nconst CustomerTable = (props) => {\r\n    const history = props.history;\r\n    const [columns, setColumns] = useState(getColumns({}));\r\n\r\n    //Here we call delete\r\n    const handleRowDelete = (oldData, resolve) => {\r\n        deleteCustomer(oldData.CustomerId)\r\n            .then(res => {\r\n                resolve()\r\n            })\r\n            .catch(error => {\r\n                resolve()\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n    <div>\r\n    <MaterialTable\r\n        minRows={20}\r\n        title=\"Informacion de Cliente\"\r\n        columns={columns}\r\n        data={async(query)=>\r\n            {\r\n                const res = await getCustomer(query.page,query.pageSize,query.search);\r\n                return ({\r\n                    data: res.records,\r\n                    page: query.page,\r\n                    totalCount: parseInt(res.total_count)\r\n                })\r\n            }\r\n        }\r\n        options={{\r\n            sorting:true,\r\n            actionsColumnIndex: -1,\r\n            pageSize: 20,\r\n            toolbar: true,\r\n            paging: true\r\n        }}\r\n\r\n        actions={[\r\n            {\r\n                icon: ()=> <Edit/>,\r\n                tooltip: 'Edit',\r\n                onClick: (event,rowData) =>{\r\n                    history.push({\r\n                        pathname:`/customer/update/${rowData.CustomerId}`,\r\n                        user:rowData\r\n                    })\r\n                }\r\n            },\r\n            {\r\n            icon: ()=><AddBox variant=\"contained\" color=\"secondary\"/>,\r\n                tooltip: 'Add New',\r\n                // This makes add button to appear in table toolbar instead for each row\r\n                isFreeAction: true,\r\n                onClick: (event, rowData) => {\r\n                    history.push(\"/customer/add\")\r\n                }\r\n            }\r\n        ]}\r\n\r\n        icons={tableIcons}\r\n        editable={{\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n              handleRowDelete(oldData, resolve)\r\n            }),\r\n        }}\r\n\r\n      />\r\n    </div>);\r\n}\r\nexport default withRouter(CustomerTable);\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\customerlog\\CustomerlogTable.js",["217","218"],"import MaterialTable from 'material-table';\r\nimport React, {useEffect, useState} from 'react';\r\nimport tableIcons from '../templates/TableIcons';\r\nimport getColumns from './CustomerlogColumns';\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport {withRouter} from \"react-router\";\r\nimport {AddBox} from \"@material-ui/icons\";\r\nimport {deleteCustomerlog, getCustomerlog} from \"../../repo/customerlogRepo\";\r\n\r\n\r\nconst CustomerlogTable = (props) => {\r\n    const history = props.history;\r\n    const [columns, setColumns] = useState(getColumns({}));\r\n\r\n    //Here we call delete\r\n    const handleRowDelete = (oldData, resolve) => {\r\n        deleteCustomerlog(oldData.CustomerId)\r\n            .then(res => {\r\n                resolve()\r\n            })\r\n            .catch(error => {\r\n                resolve()\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n    <div>\r\n    <MaterialTable\r\n        minRows={20}\r\n        title=\"Informacion de Bitacora de Cliente\"\r\n        columns={columns}\r\n        data={async(query)=>\r\n            {\r\n                const res = await getCustomerlog(query.page,query.pageSize,query.search);\r\n                return ({\r\n                    data: res.records,\r\n                    page: query.page,\r\n                    totalCount: parseInt(res.total_count)\r\n                })\r\n            }\r\n        }\r\n        options={{\r\n            sorting:true,\r\n            actionsColumnIndex: -1,\r\n            pageSize: 20,\r\n            toolbar: true,\r\n            paging: true\r\n        }}\r\n\r\n        actions={[\r\n            {\r\n                icon: ()=> <Edit/>,\r\n                tooltip: 'Edit',\r\n                onClick: (event,rowData) =>{\r\n                    history.push({\r\n                        pathname:`/customerlog/update/${rowData.CustomerId}`,\r\n                        user:rowData\r\n                    })\r\n                }\r\n            },\r\n            {\r\n            icon: ()=><AddBox variant=\"contained\" color=\"secondary\"/>,\r\n                tooltip: 'Add New',\r\n                isFreeAction: true,\r\n                onClick: (event, rowData) => {\r\n                    history.push(\"/customerlog/add\")\r\n                }\r\n            }\r\n        ]}\r\n\r\n        icons={tableIcons}\r\n        editable={{\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n              handleRowDelete(oldData, resolve)\r\n            }),\r\n        }}\r\n\r\n      />\r\n    </div>);\r\n}\r\nexport default withRouter(CustomerlogTable);\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\document\\DocumentTable.js",["219","220"],"import MaterialTable from 'material-table';\r\nimport React, {useEffect, useState} from 'react';\r\nimport tableIcons from '../templates/TableIcons';\r\nimport getColumns from './DocumentColumns';\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport {withRouter} from \"react-router\";\r\nimport {AddBox} from \"@material-ui/icons\";\r\nimport {deleteDocument, getDocument} from \"../../repo/documentRepo\";\r\n/*\r\nDocumentation on developing the Material-Table can be found at https://material-table.com/\r\nYou can use the async function passed to MaterialTable data prop to implement filters and sorting on server-side\r\nFilters and sorting can't be implemented on client side due to server-side pagination.\r\n*/\r\n\r\nconst DocumentTable = (props) => {\r\n    const history = props.history;\r\n    const [columns, setColumns] = useState(getColumns({}));\r\n\r\n    //Here we call delete\r\n    const handleRowDelete = (oldData, resolve) => {\r\n        deleteDocument(oldData.DocumentId)\r\n            .then(res => {\r\n                resolve()\r\n            })\r\n            .catch(error => {\r\n                resolve()\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n    <div>\r\n    <MaterialTable\r\n        minRows={20}\r\n        title=\"Informacion de Giftcard\"\r\n        columns={columns}\r\n        data={async(query)=>\r\n            {\r\n                const res = await getDocument(query.page,query.pageSize,query.search);\r\n                return ({\r\n                    data: res.records,\r\n                    page: query.page,\r\n                    totalCount: parseInt(res.total_count)\r\n                })\r\n            }\r\n        }\r\n        options={{\r\n            sorting:true,\r\n            actionsColumnIndex: -1,\r\n            pageSize: 20,\r\n            toolbar: true,\r\n            paging: true\r\n        }}\r\n\r\n        actions={[\r\n            {\r\n                icon: ()=> <Edit/>,\r\n                tooltip: 'Edit',\r\n                onClick: (event,rowData) =>{\r\n                    history.push({\r\n                        pathname:`/document/update/${rowData.DocumentId}`,\r\n                        user:rowData\r\n                    })\r\n                }\r\n            },\r\n            {\r\n            icon: ()=><AddBox variant=\"contained\" color=\"secondary\"/>,\r\n                tooltip: 'Add New',\r\n                isFreeAction: true,\r\n                onClick: (event, rowData) => {\r\n                    history.push(\"/document/add\")\r\n                }\r\n            }\r\n        ]}\r\n\r\n        icons={tableIcons}\r\n        editable={{\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n              handleRowDelete(oldData, resolve)\r\n            }),\r\n        }}\r\n\r\n      />\r\n    </div>);\r\n}\r\nexport default withRouter(DocumentTable);\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\documentlog\\DocumentlogTable.js",["221","222"],"import MaterialTable from 'material-table';\r\nimport React, {useEffect, useState} from 'react';\r\nimport tableIcons from '../templates/TableIcons';\r\nimport getColumns from './DocumentlogColumns';\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport {withRouter} from \"react-router\";\r\nimport {AddBox} from \"@material-ui/icons\";\r\nimport {deleteDocumentlog, getDocumentlog} from \"../../repo/documentlogRepo\";\r\n/*\r\nDocumentation on developing the Material-Table can be found at https://material-table.com/\r\nYou can use the async function passed to MaterialTable data prop to implement filters and sorting on server-side\r\nFilters and sorting can't be implemented on client side due to server-side pagination.\r\n*/\r\n\r\nconst DocumentlogTable = (props) => {\r\n    const history = props.history;\r\n    const [columns, setColumns] = useState(getColumns({}));\r\n\r\n    //Here we call delete\r\n    const handleRowDelete = (oldData, resolve) => {\r\n        deleteDocumentlog(oldData.DocumentId)\r\n            .then(res => {\r\n                resolve()\r\n            })\r\n            .catch(error => {\r\n                resolve()\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n    <div>\r\n    <MaterialTable\r\n        minRows={20}\r\n        title=\"Documentlog Data\"\r\n        columns={columns}\r\n        data={async(query)=>\r\n            {\r\n                const res = await getDocumentlog(query.page,query.pageSize,query.search);\r\n                return ({\r\n                    data: res.records,\r\n                    page: query.page,\r\n                    totalCount: parseInt(res.total_count)\r\n                })\r\n            }\r\n        }\r\n        options={{\r\n            sorting:true,\r\n            actionsColumnIndex: -1,\r\n            pageSize: 20,\r\n            toolbar: true,\r\n            paging: true\r\n        }}\r\n\r\n        actions={[\r\n            {\r\n                icon: ()=> <Edit/>,\r\n                tooltip: 'Edit',\r\n                onClick: (event,rowData) =>{\r\n                    history.push({\r\n                        pathname:`/documentlog/update/${rowData.DocumentId}`,\r\n                        user:rowData\r\n                    })\r\n                }\r\n            },\r\n            {\r\n            icon: ()=><AddBox variant=\"contained\" color=\"secondary\"/>,\r\n                tooltip: 'Add New',\r\n                // This makes add button to appear in table toolbar instead for each row\r\n                isFreeAction: true,\r\n                onClick: (event, rowData) => {\r\n                    history.push(\"/documentlog/add\")\r\n                }\r\n            }\r\n        ]}\r\n\r\n        icons={tableIcons}\r\n        editable={{\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n              handleRowDelete(oldData, resolve)\r\n            }),\r\n        }}\r\n\r\n      />\r\n    </div>);\r\n}\r\nexport default withRouter(DocumentlogTable);\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\repo\\documentlogRepo.js",["223"],"import api from \"../api/axios\";\r\n\r\n\r\n//This function is asynchronous and always returns the result of the call\r\n//If Search contains anything, Search users is called, else Get All is called\r\nconst getDocumentlog = async (pageNo,pageSize,search) => {\r\n    let res;\r\n    if(search.length===0) {\r\n        res = await getAllDocumentlog(pageNo+1,pageSize);\r\n    }\r\n\r\n    else{\r\n        try {\r\n            res = await searchDocumentlog(pageNo+1,pageSize,search);\r\n        } catch(err) {\r\n            return {\r\n                records:[],\r\n                totalCount:0\r\n            }\r\n        }\r\n    }\r\n    if(res && res.data && res.data.document && res.data.document.records && res.data.document.records.length>0){\r\n    return res.data.document;\r\n    }else{\r\n        return {\r\n            records:[],\r\n            totalCount:0\r\n        }\r\n    }\r\n    return res.data.document;\r\n}\r\n\r\n\r\nconst addDocumentlog = (data) => {\r\nreturn api.post(`/documentlog`,data)\r\n}\r\nconst updateDocumentlog = (DocumentId,data) => {\r\nreturn api.put(`/documentlog/${DocumentId}`,data)\r\n}\r\nconst getAllDocumentlog = (pageNo,pageSize) => {\r\nreturn api.get(`/documentlog/?pageNo=${pageNo}&pageSize=${pageSize}`)\r\n}\r\nconst getOneDocumentlog = (DocumentId) => {\r\nreturn api.get(`/documentlog/${DocumentId}`)\r\n}\r\nconst searchDocumentlog = (pageNo,pageSize,searchKey) => {\r\nreturn api.get(`/documentlog/search/${searchKey}/?pageNo=${pageNo}&pageSize=${pageSize}`)\r\n}\r\nconst deleteDocumentlog = (DocumentId) => {\r\nreturn api.delete(`/documentlog/${DocumentId}`)\r\n}\r\nexport {getDocumentlog,addDocumentlog,updateDocumentlog,getAllDocumentlog,getOneDocumentlog,searchDocumentlog,deleteDocumentlog}\r\n\r\n\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\repo\\customerlogRepo.js",["224"],"import api from \"../api/axios\";\r\n\r\n\r\n//This function is asynchronous and always returns the result of the call\r\n//If Search contains anything, Search users is called, else Get All is called\r\nconst getCustomerlog = async (pageNo,pageSize,search) => {\r\n    let res;\r\n    if(search.length===0) {\r\n        res = await getAllCustomerlog(pageNo+1,pageSize);\r\n    }\r\n\r\n    else{\r\n        try {\r\n            res = await searchCustomerlog(pageNo+1,pageSize,search);\r\n        } catch(err) {\r\n            return {\r\n                records:[],\r\n                totalCount:0\r\n            }\r\n        }\r\n    }\r\n    if(res && res.data && res.data.document && res.data.document.records && res.data.document.records.length>0){\r\n    return res.data.document;\r\n    }else{\r\n        return {\r\n            records:[],\r\n            totalCount:0\r\n        }\r\n    }\r\n    return res.data.document;\r\n}\r\n\r\n\r\nconst addCustomerlog = (data) => {\r\nreturn api.post(`/customerlog`,data)\r\n}\r\nconst updateCustomerlog = (CustomerId,data) => {\r\nreturn api.put(`/customerlog/${CustomerId}`,data)\r\n}\r\nconst getAllCustomerlog = (pageNo,pageSize) => {\r\nreturn api.get(`/customerlog/?pageNo=${pageNo}&pageSize=${pageSize}`)\r\n}\r\nconst getOneCustomerlog = (CustomerId) => {\r\nreturn api.get(`/customerlog/${CustomerId}`)\r\n}\r\nconst searchCustomerlog = (pageNo,pageSize,searchKey) => {\r\nreturn api.get(`/customerlog/search/${searchKey}/?pageNo=${pageNo}&pageSize=${pageSize}`)\r\n}\r\nconst deleteCustomerlog = (CustomerId) => {\r\nreturn api.delete(`/customerlog/${CustomerId}`)\r\n}\r\nexport {getCustomerlog,addCustomerlog,updateCustomerlog,getAllCustomerlog,getOneCustomerlog,searchCustomerlog,deleteCustomerlog}\r\n\r\n\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\repo\\usersRepo.js",["225"],"import api from \"../api/axios\";\r\n\r\n\r\n//This function is asynchronous and always returns the result of the call\r\n//If Search contains anything, Search users is called, else Get All is called\r\nconst getUsers = async (pageNo,pageSize,search) => {\r\n    let res;\r\n    if(search.length===0) {\r\n        res = await getAllUsers(pageNo+1,pageSize);\r\n    }\r\n\r\n    else{\r\n        try {\r\n            res = await searchUsers(pageNo+1,pageSize,search);\r\n        } catch(err) {\r\n            return {\r\n                records:[],\r\n                totalCount:0\r\n            }\r\n        }\r\n    }\r\n    if(res && res.data && res.data.document && res.data.document.records && res.data.document.records.length>0){\r\n    return res.data.document;\r\n    }else{\r\n        return {\r\n            records:[],\r\n            totalCount:0\r\n        }\r\n    }\r\n    return res.data.document;\r\n}\r\n\r\n\r\nconst addUsers = (data) => {\r\nreturn api.post(`/users`,data)\r\n}\r\nconst updateUsers = (Id,data) => {\r\nreturn api.put(`/users/${Id}`,data)\r\n}\r\nconst getAllUsers = (pageNo,pageSize) => {\r\nreturn api.get(`/users/?pageNo=${pageNo}&pageSize=${pageSize}`)\r\n}\r\nconst getOneUsers = (Id) => {\r\nreturn api.get(`/users/${Id}`)\r\n}\r\nconst searchUsers = (pageNo,pageSize,searchKey) => {\r\nreturn api.get(`/users/search/${searchKey}/?pageNo=${pageNo}&pageSize=${pageSize}`)\r\n}\r\nconst deleteUsers = (Id) => {\r\nreturn api.delete(`/users/${Id}`)\r\n}\r\nexport {getUsers,addUsers,updateUsers,getAllUsers,getOneUsers,searchUsers,deleteUsers}\r\n\r\n\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\repo\\documentRepo.js",["226"],"import api from \"../api/axios\";\r\n\r\n\r\n//This function is asynchronous and always returns the result of the call\r\n//If Search contains anything, Search users is called, else Get All is called\r\nconst getDocument = async (pageNo,pageSize,search) => {\r\n    let res;\r\n    if(search.length===0) {\r\n        res = await getAllDocument(pageNo+1,pageSize);\r\n    }\r\n\r\n    else{\r\n        try {\r\n            res = await searchDocument(pageNo+1,pageSize,search);\r\n        } catch(err) {\r\n            return {\r\n                records:[],\r\n                totalCount:0\r\n            }\r\n        }\r\n    }\r\n    if(res && res.data && res.data.document && res.data.document.records && res.data.document.records.length>0){\r\n    return res.data.document;\r\n    }else{\r\n        return {\r\n            records:[],\r\n            totalCount:0\r\n        }\r\n    }\r\n    return res.data.document;\r\n}\r\n\r\n\r\nconst addDocument = (data) => {\r\nreturn api.post(`/document`,data)\r\n}\r\nconst updateDocument = (DocumentId,data) => {\r\nreturn api.put(`/document/${DocumentId}`,data)\r\n}\r\nconst getAllDocument = (pageNo,pageSize) => {\r\nreturn api.get(`/document/?pageNo=${pageNo}&pageSize=${pageSize}`)\r\n}\r\nconst getOneDocument = (DocumentId) => {\r\nreturn api.get(`/document/${DocumentId}`)\r\n}\r\nconst searchDocument = (pageNo,pageSize,searchKey) => {\r\nreturn api.get(`/document/search/${searchKey}/?pageNo=${pageNo}&pageSize=${pageSize}`)\r\n}\r\nconst deleteDocument = (DocumentId) => {\r\nreturn api.delete(`/document/${DocumentId}`)\r\n}\r\nexport {getDocument,addDocument,updateDocument,getAllDocument,getOneDocument,searchDocument,deleteDocument}\r\n\r\n\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\repo\\customerRepo.js",["227"],"import api from \"../api/axios\";\r\n\r\n\r\n//This function is asynchronous and always returns the result of the call\r\n//If Search contains anything, Search users is called, else Get All is called\r\nconst getCustomer = async (pageNo,pageSize,search) => {\r\n    let res;\r\n    if(search.length===0) {\r\n        res = await getAllCustomer(pageNo+1,pageSize);\r\n    }\r\n\r\n    else{\r\n        try {\r\n            res = await searchCustomer(pageNo+1,pageSize,search);\r\n        } catch(err) {\r\n            return {\r\n                records:[],\r\n                totalCount:0\r\n            }\r\n        }\r\n    }\r\n    if(res && res.data && res.data.document && res.data.document.records && res.data.document.records.length>0){\r\n    return res.data.document;\r\n    }else{\r\n        return {\r\n            records:[],\r\n            totalCount:0\r\n        }\r\n    }\r\n    return res.data.document;\r\n}\r\n\r\n\r\nconst addCustomer = (data) => {\r\nreturn api.post(`/customer`,data)\r\n}\r\nconst updateCustomer = (CustomerId,data) => {\r\nreturn api.put(`/customer/${CustomerId}`,data)\r\n}\r\nconst getAllCustomer = (pageNo,pageSize) => {\r\nreturn api.get(`/customer/?pageNo=${pageNo}&pageSize=${pageSize}`)\r\n}\r\nconst getOneCustomer = (CustomerId) => {\r\nreturn api.get(`/customer/${CustomerId}`)\r\n}\r\nconst searchCustomer = (pageNo,pageSize,searchKey) => {\r\nreturn api.get(`/customer/search/${searchKey}/?pageNo=${pageNo}&pageSize=${pageSize}`)\r\n}\r\nconst deleteCustomer = (CustomerId) => {\r\nreturn api.delete(`/customer/${CustomerId}`)\r\n}\r\nexport {getCustomer,addCustomer,updateCustomer,getAllCustomer,getOneCustomer,searchCustomer,deleteCustomer}\r\n\r\n\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\templates\\MenuItems.js",[],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\templates\\TableIcons.js",[],"D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\document\\DocumentColumns.js",["228","229","230","231"],"import { Switch } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Avatar from 'react-avatar';\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\n/*\r\nIn order to validate errors on the input field you can\r\noverride the editComponent of the Material Table to add a new material-ui Input fields\r\nand use props for validation.\r\nInformation on material-ui Input element https://material-ui.com/api/input/\r\nInformation on material-table Props https://material-table.com/#/docs/all-props\r\nYou can also find an example of an overridden element bellow. Overriding the render method is not a must.\r\n */\r\nconst GetDocumentColumns = (totalCount) => [\r\n  {title: \"ID Unico Gift\", field: \"DocumentId\",hidden:true},\r\n\r\n  {title: \"ID Cliente\", field: \"CustomerId\"},\r\n{title: \"Tipo Giftcard\", field: \"DocType\"},\r\n{title: \"ID Docto\", field: \"DocIdentity\"},\r\n{title: \"Fecha Creacion\", field: \"CreatedDate\",type:\"date\"},\r\n{title: \"Fecha Activacion\", field: \"ActivateDate\",type:\"date\"},\r\n{title: \"Fecha Cancelacion\", field: \"CancelDate\",type:\"date\"},\r\n{title: \"Monto de Entrada\", field: \"InAmount\"},\r\n{title: \"Monto de Salida\", field: \"OutAmount\"},\r\n{title: \"Saldo\", field: \"BalanceAmount\"},\r\n{title: \"Estado\", field: \"DocStatus\"},\r\n{title: \"Valor Cliente\", field: \"CustomerId_Value\"},\r\n\r\n]\r\nexport default GetDocumentColumns;\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\documentlog\\DocumentlogColumns.js",["232","233","234","235"],"import { Switch } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Avatar from 'react-avatar';\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\n/*\r\nIn order to validate errors on the input field you can\r\noverride the editComponent of the Material Table to add a new material-ui Input fields\r\nand use props for validation.\r\nInformation on material-ui Input element https://material-ui.com/api/input/\r\nInformation on material-table Props https://material-table.com/#/docs/all-props\r\nYou can also find an example of an overridden element bellow. Overriding the render method is not a must.\r\n */\r\nconst GetDocumentlogColumns = (totalCount) => [\r\n  {title: \"DocumentId\", field: \"DocumentId\",hidden:true},\r\n\r\n  {title: \"LogDate\", field: \"LogDate\",type:\"date\"},\r\n{title: \"LogOper\", field: \"LogOper\"},\r\n\r\n]\r\nexport default GetDocumentlogColumns;\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\customerlog\\CustomerlogColumns.js",["236","237","238","239"],"import { Switch } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Avatar from 'react-avatar';\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\n/*\r\nIn order to validate errors on the input field you can\r\noverride the editComponent of the Material Table to add a new material-ui Input fields\r\nand use props for validation.\r\nInformation on material-ui Input element https://material-ui.com/api/input/\r\nInformation on material-table Props https://material-table.com/#/docs/all-props\r\nYou can also find an example of an overridden element bellow. Overriding the render method is not a must.\r\n */\r\nconst GetCustomerlogColumns = (totalCount) => [\r\n  {title: \"ID Unico\", field: \"CustomerId\",hidden:true},\r\n\r\n  {title: \"Fecha Log\", field: \"LogDate\",type:\"date\"},\r\n{title: \"Mensaje\", field: \"LogOper\"},\r\n\r\n]\r\nexport default GetCustomerlogColumns;\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\customer\\CustomerColumns.js",["240","241","242","243"],"import { Switch } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Avatar from 'react-avatar';\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst GetCustomerColumns = (totalCount) => [\r\n  {title: \"ID Unico\", field: \"CustomerId\",hidden:true},\r\n\r\n  {title: \"Nombre de Cliente\", field: \"CustName\"},\r\n{title: \"RUT\", field: \"CustIdentity\"},\r\n{title: \"Certificado ID\", field: \"CustCert\"},\r\n{title: \"Tipo Docto.\", field: \"CustDocType\"},\r\n{title: \"Fecha Final\", field: \"CustFinalDate\",type:\"date\"},\r\n{title: \"Fecha Activacion\", field: \"CustActivationDate\",type:\"date\"},\r\n{title: \"Monto Vendido\", field: \"CustSale\"},\r\n{title: \"Monto Pagado\", field: \"CustPay\"},\r\n{title: \"Monto Recarga\", field: \"CustReLoad\"},\r\n{title: \"Estado\", field: \"CustStatus\"},\r\n{title: \"Info Adic 1\", field: \"CustInfoAdic1\"},\r\n{title: \"Info Adic 2\", field: \"CustInfoAdic2\"},\r\n{title: \"Info Adic 3\", field: \"CustInfoAdic3\"},\r\n{title: \"Info Adic 4\", field: \"CustInfoAdic4\"},\r\n{title: \"Fecha Adic 1\", field: \"CustDateAdic1\",type:\"date\"},\r\n{title: \"Fecha Adic 2\", field: \"CustDateAdic2\",type:\"date\"},\r\n{title: \"Valor Adic 1\", field: \"CustValueAdic1\"},\r\n{title: \"Valor Adic 2\", field: \"CustValueAdic2\"},\r\n{title: \"Valor Adic 3\", field: \"CustValueAdic3\"},\r\n\r\n]\r\nexport default GetCustomerColumns;\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\users\\UsersTable.js",["244","245"],"import MaterialTable from 'material-table';\r\nimport React, {useEffect, useState} from 'react';\r\nimport tableIcons from '../templates/TableIcons';\r\nimport getColumns from './UsersColumns';\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport {withRouter} from \"react-router\";\r\nimport {AddBox} from \"@material-ui/icons\";\r\nimport {deleteUsers, getUsers} from \"../../repo/usersRepo\";\r\n\r\nconst UsersTable = (props) => {\r\n    const history = props.history;\r\n    const [columns, setColumns] = useState(getColumns({}));\r\n\r\n    //Here we call delete\r\n    const handleRowDelete = (oldData, resolve) => {\r\n        deleteUsers(oldData.Id)\r\n            .then(res => {\r\n                resolve()\r\n            })\r\n            .catch(error => {\r\n                resolve()\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n    <div>\r\n    <MaterialTable\r\n        minRows={20}\r\n        title=\"Registro de Usuarios\"\r\n        columns={columns}\r\n        data={async(query)=>\r\n            {\r\n                const res = await getUsers(query.page,query.pageSize,query.search);\r\n                return ({\r\n                    data: res.records,\r\n                    page: query.page,\r\n                    totalCount: parseInt(res.total_count)\r\n                })\r\n            }\r\n        }\r\n        options={{\r\n            sorting:true,\r\n            actionsColumnIndex: -1,\r\n            pageSize: 20,\r\n            toolbar: true,\r\n            paging: true\r\n        }}\r\n\r\n        actions={[\r\n            {\r\n                icon: ()=> <Edit/>,\r\n                tooltip: 'Edit',\r\n                onClick: (event,rowData) =>{\r\n                    history.push({\r\n                        pathname:`/users/update/${rowData.Id}`,\r\n                        user:rowData\r\n                    })\r\n                }\r\n            },\r\n            {\r\n            icon: ()=><AddBox variant=\"contained\" color=\"secondary\"/>,\r\n                tooltip: 'Add New',\r\n                // This makes add button to appear in table toolbar instead for each row\r\n                isFreeAction: true,\r\n                onClick: (event, rowData) => {\r\n                    history.push(\"/users/add\")\r\n                }\r\n            }\r\n        ]}\r\n\r\n        icons={tableIcons}\r\n        editable={{\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n              handleRowDelete(oldData, resolve)\r\n            }),\r\n        }}\r\n\r\n      />\r\n    </div>);\r\n}\r\nexport default withRouter(UsersTable);\r\n","D:\\MicroServiceGeneratorTool\\NodeJSRestAPI_ReactJSAdminPanelGenerator_V1.1\\GeneratorTool\\GiftCardWebApp\\ReactApp\\src\\components\\users\\UsersColumns.js",["246","247","248","249"],"import { Switch } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Avatar from 'react-avatar';\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\n/*\r\nIn order to validate errors on the input field you can\r\noverride the editComponent of the Material Table to add a new material-ui Input fields\r\nand use props for validation.\r\nInformation on material-ui Input element https://material-ui.com/api/input/\r\nInformation on material-table Props https://material-table.com/#/docs/all-props\r\nYou can also find an example of an overridden element bellow. Overriding the render method is not a must.\r\n */\r\nconst GetUsersColumns = (totalCount) => [\r\n  {title: \"Id\", field: \"Id\",hidden:true},\r\n\r\n  {title: \"ID Cuenta\", field: \"AccountId\"},\r\n{title: \"Nombre Usuario\", field: \"UserName\"},\r\n{title: \"Contraseña\", field: \"Password\"},\r\n{title: \"Email\", field: \"Email\"},\r\n{title: \"Activo ?\", field: \"IsActive\"},\r\n{title: \"Administrador ?\", field: \"IsAdmin\"},\r\n{title: \"Ultim tiempo de acceso\", field: \"LastLoginTime\",type:\"date\"},\r\n{title: \"Fecha de Creacion\", field: \"CreatedDate\",type:\"date\"},\r\n{title: \"Creado por\", field: \"Creator\"},\r\n{title: \"Fecha de Modificacion\", field: \"ModifiedDate\",type:\"date\"},\r\n{title: \"Modificado por\", field: \"Modifier\"},\r\n\r\n]\r\nexport default GetUsersColumns;\r\n",{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":2,"column":9,"nodeType":"256","messageId":"257","endLine":2,"endColumn":18},{"ruleId":"254","severity":1,"message":"258","line":5,"column":9,"nodeType":"256","messageId":"257","endLine":5,"endColumn":15},{"ruleId":"254","severity":1,"message":"259","line":8,"column":8,"nodeType":"256","messageId":"257","endLine":8,"endColumn":24},{"ruleId":"254","severity":1,"message":"260","line":9,"column":8,"nodeType":"256","messageId":"257","endLine":9,"endColumn":14},{"ruleId":"254","severity":1,"message":"261","line":10,"column":8,"nodeType":"256","messageId":"257","endLine":10,"endColumn":16},{"ruleId":"254","severity":1,"message":"262","line":15,"column":8,"nodeType":"256","messageId":"257","endLine":15,"endColumn":18},{"ruleId":"254","severity":1,"message":"263","line":17,"column":25,"nodeType":"256","messageId":"257","endLine":17,"endColumn":39},{"ruleId":"254","severity":1,"message":"264","line":24,"column":10,"nodeType":"256","messageId":"257","endLine":24,"endColumn":23},{"ruleId":"254","severity":1,"message":"258","line":5,"column":9,"nodeType":"256","messageId":"257","endLine":5,"endColumn":15},{"ruleId":"254","severity":1,"message":"259","line":8,"column":8,"nodeType":"256","messageId":"257","endLine":8,"endColumn":24},{"ruleId":"254","severity":1,"message":"260","line":9,"column":8,"nodeType":"256","messageId":"257","endLine":9,"endColumn":14},{"ruleId":"254","severity":1,"message":"261","line":10,"column":8,"nodeType":"256","messageId":"257","endLine":10,"endColumn":16},{"ruleId":"254","severity":1,"message":"262","line":15,"column":8,"nodeType":"256","messageId":"257","endLine":15,"endColumn":18},{"ruleId":"254","severity":1,"message":"265","line":17,"column":22,"nodeType":"256","messageId":"257","endLine":17,"endColumn":33},{"ruleId":"254","severity":1,"message":"264","line":24,"column":10,"nodeType":"256","messageId":"257","endLine":24,"endColumn":23},{"ruleId":"254","severity":1,"message":"258","line":5,"column":9,"nodeType":"256","messageId":"257","endLine":5,"endColumn":15},{"ruleId":"254","severity":1,"message":"259","line":8,"column":8,"nodeType":"256","messageId":"257","endLine":8,"endColumn":24},{"ruleId":"254","severity":1,"message":"266","line":17,"column":22,"nodeType":"256","messageId":"257","endLine":17,"endColumn":33},{"ruleId":"254","severity":1,"message":"264","line":25,"column":10,"nodeType":"256","messageId":"257","endLine":25,"endColumn":23},{"ruleId":"254","severity":1,"message":"258","line":5,"column":9,"nodeType":"256","messageId":"257","endLine":5,"endColumn":15},{"ruleId":"254","severity":1,"message":"259","line":8,"column":8,"nodeType":"256","messageId":"257","endLine":8,"endColumn":24},{"ruleId":"254","severity":1,"message":"260","line":9,"column":8,"nodeType":"256","messageId":"257","endLine":9,"endColumn":14},{"ruleId":"254","severity":1,"message":"261","line":10,"column":8,"nodeType":"256","messageId":"257","endLine":10,"endColumn":16},{"ruleId":"254","severity":1,"message":"262","line":15,"column":8,"nodeType":"256","messageId":"257","endLine":15,"endColumn":18},{"ruleId":"254","severity":1,"message":"267","line":17,"column":25,"nodeType":"256","messageId":"257","endLine":17,"endColumn":39},{"ruleId":"254","severity":1,"message":"264","line":24,"column":10,"nodeType":"256","messageId":"257","endLine":24,"endColumn":23},{"ruleId":"254","severity":1,"message":"258","line":5,"column":9,"nodeType":"256","messageId":"257","endLine":5,"endColumn":15},{"ruleId":"254","severity":1,"message":"259","line":8,"column":8,"nodeType":"256","messageId":"257","endLine":8,"endColumn":24},{"ruleId":"254","severity":1,"message":"260","line":9,"column":8,"nodeType":"256","messageId":"257","endLine":9,"endColumn":14},{"ruleId":"254","severity":1,"message":"261","line":10,"column":8,"nodeType":"256","messageId":"257","endLine":10,"endColumn":16},{"ruleId":"254","severity":1,"message":"262","line":15,"column":8,"nodeType":"256","messageId":"257","endLine":15,"endColumn":18},{"ruleId":"254","severity":1,"message":"268","line":17,"column":19,"nodeType":"256","messageId":"257","endLine":17,"endColumn":27},{"ruleId":"254","severity":1,"message":"269","line":5,"column":7,"nodeType":"256","messageId":"257","endLine":5,"endColumn":15},{"ruleId":"254","severity":1,"message":"255","line":2,"column":16,"nodeType":"256","messageId":"257","endLine":2,"endColumn":25},{"ruleId":"254","severity":1,"message":"270","line":13,"column":21,"nodeType":"256","messageId":"257","endLine":13,"endColumn":31},{"ruleId":"254","severity":1,"message":"255","line":2,"column":16,"nodeType":"256","messageId":"257","endLine":2,"endColumn":25},{"ruleId":"254","severity":1,"message":"270","line":13,"column":21,"nodeType":"256","messageId":"257","endLine":13,"endColumn":31},{"ruleId":"254","severity":1,"message":"255","line":2,"column":16,"nodeType":"256","messageId":"257","endLine":2,"endColumn":25},{"ruleId":"254","severity":1,"message":"270","line":17,"column":21,"nodeType":"256","messageId":"257","endLine":17,"endColumn":31},{"ruleId":"254","severity":1,"message":"255","line":2,"column":16,"nodeType":"256","messageId":"257","endLine":2,"endColumn":25},{"ruleId":"254","severity":1,"message":"270","line":17,"column":21,"nodeType":"256","messageId":"257","endLine":17,"endColumn":31},{"ruleId":"271","severity":1,"message":"272","line":30,"column":5,"nodeType":"273","messageId":"274","endLine":30,"endColumn":30},{"ruleId":"271","severity":1,"message":"272","line":30,"column":5,"nodeType":"273","messageId":"274","endLine":30,"endColumn":30},{"ruleId":"271","severity":1,"message":"272","line":30,"column":5,"nodeType":"273","messageId":"274","endLine":30,"endColumn":30},{"ruleId":"271","severity":1,"message":"272","line":30,"column":5,"nodeType":"273","messageId":"274","endLine":30,"endColumn":30},{"ruleId":"271","severity":1,"message":"272","line":30,"column":5,"nodeType":"273","messageId":"274","endLine":30,"endColumn":30},{"ruleId":"254","severity":1,"message":"258","line":1,"column":10,"nodeType":"256","messageId":"257","endLine":1,"endColumn":16},{"ruleId":"254","severity":1,"message":"275","line":2,"column":8,"nodeType":"256","messageId":"257","endLine":2,"endColumn":13},{"ruleId":"254","severity":1,"message":"276","line":3,"column":8,"nodeType":"256","messageId":"257","endLine":3,"endColumn":14},{"ruleId":"254","severity":1,"message":"277","line":4,"column":8,"nodeType":"256","messageId":"257","endLine":4,"endColumn":13},{"ruleId":"254","severity":1,"message":"258","line":1,"column":10,"nodeType":"256","messageId":"257","endLine":1,"endColumn":16},{"ruleId":"254","severity":1,"message":"275","line":2,"column":8,"nodeType":"256","messageId":"257","endLine":2,"endColumn":13},{"ruleId":"254","severity":1,"message":"276","line":3,"column":8,"nodeType":"256","messageId":"257","endLine":3,"endColumn":14},{"ruleId":"254","severity":1,"message":"277","line":4,"column":8,"nodeType":"256","messageId":"257","endLine":4,"endColumn":13},{"ruleId":"254","severity":1,"message":"258","line":1,"column":10,"nodeType":"256","messageId":"257","endLine":1,"endColumn":16},{"ruleId":"254","severity":1,"message":"275","line":2,"column":8,"nodeType":"256","messageId":"257","endLine":2,"endColumn":13},{"ruleId":"254","severity":1,"message":"276","line":3,"column":8,"nodeType":"256","messageId":"257","endLine":3,"endColumn":14},{"ruleId":"254","severity":1,"message":"277","line":4,"column":8,"nodeType":"256","messageId":"257","endLine":4,"endColumn":13},{"ruleId":"254","severity":1,"message":"258","line":1,"column":10,"nodeType":"256","messageId":"257","endLine":1,"endColumn":16},{"ruleId":"254","severity":1,"message":"275","line":2,"column":8,"nodeType":"256","messageId":"257","endLine":2,"endColumn":13},{"ruleId":"254","severity":1,"message":"276","line":3,"column":8,"nodeType":"256","messageId":"257","endLine":3,"endColumn":14},{"ruleId":"254","severity":1,"message":"277","line":4,"column":8,"nodeType":"256","messageId":"257","endLine":4,"endColumn":13},{"ruleId":"254","severity":1,"message":"255","line":2,"column":16,"nodeType":"256","messageId":"257","endLine":2,"endColumn":25},{"ruleId":"254","severity":1,"message":"270","line":12,"column":21,"nodeType":"256","messageId":"257","endLine":12,"endColumn":31},{"ruleId":"254","severity":1,"message":"258","line":1,"column":10,"nodeType":"256","messageId":"257","endLine":1,"endColumn":16},{"ruleId":"254","severity":1,"message":"275","line":2,"column":8,"nodeType":"256","messageId":"257","endLine":2,"endColumn":13},{"ruleId":"254","severity":1,"message":"276","line":3,"column":8,"nodeType":"256","messageId":"257","endLine":3,"endColumn":14},{"ruleId":"254","severity":1,"message":"277","line":4,"column":8,"nodeType":"256","messageId":"257","endLine":4,"endColumn":13},"no-native-reassign",["278"],"no-negated-in-lhs",["279"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'InputLabel' is defined but never used.","'getCustomerlog' is defined but never used.","'validateEmail' is defined but never used.","'getCustomer' is defined but never used.","'getDocument' is defined but never used.","'getDocumentlog' is defined but never used.","'getUsers' is defined but never used.","'proxyurl' is assigned a value but never used.","'setColumns' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'React' is defined but never used.","'Avatar' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]